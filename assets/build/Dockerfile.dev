# ---------------------------------------------
# STAGE 1: Build the application
# ---------------------------------------------
FROM python:3.13-alpine

# Set working directory
WORKDIR /app

# Install build dependencies
# NOTE: Adding packages for development debugging and testing
RUN apk add --no-cache \
    gcc \
    musl-dev \
    python3-dev \
    git \
    curl \
    which \
    bash \
    linux-headers

# Copy requirements first to leverage Docker cache
COPY /assets/build/requirements.prod.txt .

# Install dependencies into a virtual environment to isolate them
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --no-cache-dir --upgrade pip && \
    /opt/venv/bin/pip install --no-cache-dir -r requirements.prod.txt && \
    rm requirements.prod.txt

# Copy requirements first to leverage Docker cache
COPY /assets/build/requirements.dev.txt /app/

# Install dependencies into a virtual environment to isolate them
RUN python -m venv /opt/venv && \
    /opt/venv/bin/pip install --no-cache-dir --upgrade pip && \
    /opt/venv/bin/pip install --no-cache-dir -r requirements.dev.txt && \
    rm requirements.dev.txt 
    
# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/opt/venv/bin:$PATH"